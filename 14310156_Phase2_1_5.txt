COS 301 Phase 2 Section 1.5

1.5.1 Access Channels

The human access channels of the system will be implemented with both a desktop interface and an Android interface with underlying web-services. Users will be able to access the Android interface by downloading the application from the Google Play Store. The access channels for the desktop web interface will be implemented using the RESTful API architecture based on a MVC-based SPA architectural pattern. The Android interface will also be implemented using the RESTful API architecture but it will be based on the standard MVC architectural pattern. The AngularJS framework using HTML, Javascript and CSS will be implemented for the web interface in order to provide a modern, dynamic and attractive user experience. Cookies will also be implemented for the web interface in order to store the client’s usage data to provide an overall better user experience.

1.5.2 Integration Channels

Java will be used to code the back-end of the application as it is widely supported, it has a multitude of features, it has support for cross-platform desktop applications and the language can be easily converted to another language. This is related to the potential need for a multi-platform desktop application in the future and it can be used for both the desktop and the Android interfaces. The Spring Framework will be implemented as the back-end of the system’s framework as it integrates easily with Java. The RESTful API will be used with HTTP as a high level protocol as HTTP is widely supported and the RESTful API is supported greatly by the Java and Android libraries. The Java Jersey framework will be implemented along with the Swagger API as they support development using RESTful API. Spring Social will be incorporated as it is an extension of the Spring Framework which provides an access channel to Software-as-a-Service providers, for example LinkedIn. Spring Boot will be implemented to handle the bootstrapping and development of the Spring application. The development complexity of this distributed system will be decreased by the implementation of Spring Cloud. Spring Data and Liquibase will be implemented along with Hibernate ORM to handle all the CRUD actions for the PostgreSQL database. These CRUD functions are built into Spring Data so they won’t need to be coded manually. The framework which Hibernate provides will enable mapping of the object-oriented domain model to the relational database. Spring Security will provide thorough security for the system as it enables easy authentication and access control to the data stored in the database, which is always an important requirement for any system. The SOA will be implemented to ensure seamless integration channels as it doesn’t require the code to be changed drastically in order for the software to work together. Simple Logging Façade for Java and Apache Log4J will be implemented to handle the appropriate binding and API logging required by the system. PHP with HTML will be implemented for the web interface and services to handle all the server-side communication. The Android interface will be coded in Java with XML using the Spring for Android framework, for the same reasons as stated above regarding the Spring Framework for the desktop application.


